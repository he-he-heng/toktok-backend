// Code generated by ent, DO NOT EDIT.

package attempt

import (
	"time"

	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the attempt type in the database.
	Label = "attempt"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldPhone holds the string denoting the phone field in the database.
	FieldPhone = "phone"
	// FieldAuthcode holds the string denoting the authcode field in the database.
	FieldAuthcode = "authcode"
	// FieldCnt holds the string denoting the cnt field in the database.
	FieldCnt = "cnt"
	// FieldBreak holds the string denoting the break field in the database.
	FieldBreak = "break"
	// FieldTimestamp holds the string denoting the timestamp field in the database.
	FieldTimestamp = "timestamp"
	// Table holds the table name of the attempt in the database.
	Table = "attempts"
)

// Columns holds all SQL columns for attempt fields.
var Columns = []string{
	FieldID,
	FieldPhone,
	FieldAuthcode,
	FieldCnt,
	FieldBreak,
	FieldTimestamp,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCnt holds the default value on creation for the "cnt" field.
	DefaultCnt int
	// DefaultBreak holds the default value on creation for the "break" field.
	DefaultBreak bool
	// DefaultTimestamp holds the default value on creation for the "timestamp" field.
	DefaultTimestamp func() time.Time
)

// OrderOption defines the ordering options for the Attempt queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByPhone orders the results by the phone field.
func ByPhone(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPhone, opts...).ToFunc()
}

// ByAuthcode orders the results by the authcode field.
func ByAuthcode(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAuthcode, opts...).ToFunc()
}

// ByCnt orders the results by the cnt field.
func ByCnt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCnt, opts...).ToFunc()
}

// ByBreak orders the results by the break field.
func ByBreak(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldBreak, opts...).ToFunc()
}

// ByTimestamp orders the results by the timestamp field.
func ByTimestamp(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTimestamp, opts...).ToFunc()
}
